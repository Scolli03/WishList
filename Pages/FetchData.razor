@page "/fetchdata"
@using Microsoft.AspNetCore.Identity;
@inject WishListService wishListService
@inject UserManager<IdentityUser> _UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<h1>My Wishlist</h1>

@if (wishes == null)
{
        <p><em>Loading...</em></p>
}
else
{
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Year</th>
                    <th>Type</th>
                    <th>Season</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var wish in wishes)
            {
                        <tr>
                            <td>@wish.Title</td>
                            <td>@wish.Year</td>
                            <td>@wish.Type</td>
                            <td>@wish.Season</td>
                        </tr>
            }
            </tbody>
        </table>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    System.Security.Claims.ClaimsPrincipal CurrentUser;    
    private List<Wish> wishes;

    protected override async Task OnInitializedAsync()
    {
        // Get the current logged in user
        CurrentUser = (await authenticationStateTask).User;

        

        Console.WriteLine(CurrentUser.Claims);

        wishes = await wishListService.GetWishAsync();
    }
}
